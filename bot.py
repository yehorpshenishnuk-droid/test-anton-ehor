import os
import requests
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
POSTER_TOKEN = os.getenv('POSTER_TOKEN')
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
GROUP_CHAT_ID = int(os.getenv('GROUP_CHAT_ID'))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ‚Äî —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    one_time_keyboard=False,
    keyboard=[
        [KeyboardButton("üìÖ –í–∏—Ç–æ—Ä–≥ –∑–∞ –¥–µ–Ω—å")]
    ]
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –∑–∞ –¥–µ–Ω—å
def get_day_revenue():
    today = datetime.now().strftime('%Y%m%d')
    url = (
        f'https://joinposter.com/api/dash.getSales?'
        f'token={POSTER_TOKEN}&dateFrom={today}&dateTo={today}'
    )
    try:
        resp = requests.get(url, timeout=20)
        resp.raise_for_status()
        sales = resp.json().get('response', [])
        total = sum(float(s.get('total_sum', 0)) for s in sales)
        return total
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Poster API: {e}")
        return None

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@dp.message_handler(lambda message: message.text == "üìÖ –í–∏—Ç–æ—Ä–≥ –∑–∞ –¥–µ–Ω—å")
async def day_revenue_handler(message: types.Message):
    total = get_day_revenue()
    if total is not None:
        formatted = f"{total:,.0f}".replace(",", " ")
        await message.answer(f"üìÖ –í–∏—Ç–æ—Ä–≥ –∑–∞ —Å—å–æ–≥–æ–¥–Ω—ñ: {formatted} –≥—Ä–Ω", reply_markup=keyboard)
    else:
        await message.answer("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏—Ç–æ—Ä–≥ –∑–∞ –¥–µ–Ω—å", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
@dp.message_handler(commands=['start', 'report'])
async def start_cmd(message: types.Message):
    await message.answer("üëã –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –≤–∏—Ç–æ—Ä–≥ –∑–∞ –¥–µ–Ω—å:", reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    executor.start_polling(dp)
